@implements IDisposable

@inject NavigationManager NavigationManager


<!-- 🔹 TopBar -->
<header class="topbar">
    <div class="topbar-container">
        <div class="flex-shrink-0">
            <a href="/" class="topbar-logo">
                🛠️
            </a>
        </div>

        <div class="topbar-buttons">
            <AuthorizeView>
                <Authorized>
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="button-logout">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </Authorized>
                <NotAuthorized>
                    <a href="/Account/Login" class="button-login">
                        Logowanie
                    </a>
                    <a href="/Account/Register" class="button-register">
                        Rejestracja
                    </a>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</header>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}